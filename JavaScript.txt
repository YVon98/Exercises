

	**********video for learning: https://www.youtube.com/watch?v=PkZNo7MFNFg
	
	một số thành phần có cách sử dụng như java: sử dụng // để chú thích, cách khai báo vòng lặp và điều kiện rẽ nhánh if
	In HTML, JavaScript code is inserted between <script> and </script> tags.
	
	+slice(a,b) : hiển thị nội dung văn bản từ vị trí thứ a đến vị trí b
	replace(a,b): thay đổi giá trị của a thành b
	pop(): remove last item
	
		+JavaScript can "display" data in different ways:
	Writing into an HTML element, using innerHTML. //Changing the innerHTML property of an HTML element is a common way to display data in HTML.
	Writing into the HTML output using document.write(). // gUsing document.write() after an HTML document is loaded, will delete all existing HTML, 
		The document.write() method should only be used for testing.
	Writing into an alert box, using window.alert(). // use for sending error
	Writing into the browser console, using console.log().	// use for debugs
	window.print(): print the content of the current window.
	
	+ js nhận diện dấu $ và _ như 1 chữ cái: 2 dấu này đc dùng để đặt tên biến là hợp lệ
	+ let : use in loop    ////https://www.w3schools.com/js/js_let.asp
	+ const similar to let: It does NOT define a constant value. It defines a constant reference to a value.
		Because of this, we cannot change constant primitive values, but we can change the properties of constant objects
		
	+ Common HTML Events
Here is a list of some common HTML events:

Event	Description
onchange	An HTML element has been changed
onclick	The user clicks an HTML element
onmouseover	The user moves the mouse over an HTML element
onmouseout	The user moves the mouse away from an HTML element
onkeydown	The user pushes a keyboard key
onload	The browser has finished loading the page
	
	- Array: []
	- Object: {}
	
	- để thêm 1 list đối tượng, cần thực hiện 2 bước
		+ Khai báo list dưới dạng chuỗi,
		+ Convert list về dạng json ( ví dụ: có 1 biến var text ..., obj = JSON.parse(text);)
		
	- Phân biệt chữ in hoa với chữ thường
	- Avoid global variables, avoid "new", avoid "==", avoid "eval()"
	- Không nên dùng "let" để khai báo biến
	(Local variables must be declared with the var keyword or the let keyword, otherwise they will become global variables)
	- Nên giảm thiểu các statement trong vòng lặp để giảm thiểu yếu tố cản trở hiệu suất của vòng lặp
	- Không có ý định lưu kết quả thì không nên tạo biến
	
	
	
	- DOM là cách mà JS giao tiếp với HTML (Document Object Model – tạm dịch Mô hình Các Đối tượng Tài liệu)
	- Global scope nằm ngoài block
	- "===" say no with convert data type
	
	
	- Có thể gọi giá trị của biến trong console bằn cách sử dụng: ${}
		tuy nhiên nên nhớ dấu ``. ví dụ: 
										var myName = 'von';
										var myCity = 'hcm';
										console.log(`My name is ${myName}. My favorite city is ${myCity}.`);
	- Điều kiện if rút gọn: 
								ví dụ:
								let defaultName;
								if (username) {
									defaultName = username;
								} else {
									defaultName = 'Stranger';
								}
								sẽ tương tự với:    let defaultName = username || 'Stranger';
							
	- Ternary Operator (toán tử 3 bậc): 
								ví dụ:   isNightTime ? console.log('Turn on the lights!') : console.log('Turn off the lights!');
	- Chú ý trong câu điều kiện: so sánh dùng "==="
								ví dụ: 
								let stopLight = 'yellow';
 
								if (stopLight === 'red') {
									console.log('Stop!');
								} else if (stopLight === 'yellow') {
									console.log('Slow down.');
								} else if (stopLight === 'green') {
									console.log('Go!');
								} else {
									console.log('Caution, unknown!');
								}
								
	- Hàm ẩn danh(cách khác để khai báo hàm): 	
								vd: const plantNeedsWater = function(day) {/*các logic đc thực hiện ở đây */};
	
	- Arrow Functions: ví dụ từ hàm ẩn danh trên ta có thể khai báo dưới dạng sau đây:
								const plantNeedsWater =(day) => {/*các logic đc thực hiện ở đây */};
	
	
	
	
	
	
	
	
	
	
	
	
	
	