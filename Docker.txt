

		Docker: ( là một nền tảng Container)........https://docker-curriculum.com/
		- Docker là một nền tảng để cung cấp cách để building,
		deploying và running ứng dụng dễ dàng hơn bằng cách sử dụng các containers (trên nền tảng ảo hóa).
		- Container: cho phép lập trình viên đóng gói một ứng dụng với tất cả các phần cần thiết, chẳng hạn như thư viện và các phụ thuộc khác, và gói tất cả ra dưới dạng một package.
		(ứng dụng sẽ chạy trên mọi máy Linux khác bất kể mọi cài đặt tùy chỉnh mà máy có thể có khác với máy được sử dụng để viết code)
		- Images: là 1 khuôn mẫu để tạo container.
		- Container: là một instance của image (có thể create, start, stop, move or delete container dựa trên Docker API hoặc Docker CLI)
		- Quy trình thực thi của một hệ thống khi sử dụng Docker:
			+ Build: tạo một DockerFile(code của chúng ta) đc build tại một máy đã cài đặt Docker Engine, khi build xong Container này chứa ứng dụng kèm bộ thư viện của chúng ta.
			+ Push: push Container này lên cloud và lưu trên đó.
			+ Pull, Run: nếu một máy khác muốn sử dụng cái Container này thì phải pull container về máy và bắt buộc phải có Docker Engine để run container này
		- Khi nào sử dụng Docker:
			+ Triển khai cấu trúc microservices
			+ Khi không muốn tốn quá nhiều thời gian để config máy local và server có cùng một môi trường để chạy ứng dụng (build 1 lần chạy nhiều nơi)
			
		Kubernetes: công cụ điều phối container cho nền tảng Container như Docker 
		- Tất cả các thành phần của Kubernetes thông qua máy chủ API, có thể chia thành 3 thành phần chính:
			+ Mặt phẳng điều khiển (Node chủ đạo)
			+ Node (vị trí các Pod đc thực hiện)
			+ Pod (giữ các Container)  https://renovacloud.com/wp-content/uploads/2019/11/Picture6.png
			
			
			Sự phối hợp giữa kubernates và docker
	*** Có thể sử dụng Docker mà k cần Kubernetes
	*** Kubernetes cần runtime container -> k thể sử dụng riêng lẻ